from aiogram.filters import Command
from aiogram.types import Message

from configs import secret_box
from db import db_redis
from filters import GroupChat

from handlers import dp

flags = {"throttling_key": "snow"}


@dp.message(Command('snow'), GroupChat(), flags=flags)
async def game_snow(message: Message) -> None:
    # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ reply
    if message.reply_to_message is None:
        await message.answer(f'@{message.from_user.username} –±—Ä–æ—Å–∏–ª(–∞) —Å–Ω–µ–∂–æ–∫ ‚ùÑÔ∏è –≤ –≤–æ–∑–¥—É—Ö')
        return

    # –µ—Å–ª–∏ reply –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    if message.reply_to_message.from_user.is_bot:
        await message.answer(
            text=f'@{message.from_user.username} –±—Ä–æ—Å–∏–ª(–∞) —Å–Ω–µ–∂–æ–∫ ‚ùÑÔ∏è –≤ @{message.reply_to_message.from_user.username}, '
                 f'–Ω–æ –Ω–µ –ø–æ–ø–∞–ª(–∞)',
        )
        return

    # –µ—Å–ª–∏ reply –Ω–∞ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.from_user.username == message.reply_to_message.from_user.username:
        await message.answer(
            text=f'@{message.from_user.username} –±—Ä–æ—Å–∏–ª(–∞) —Å–Ω–µ–∂–æ–∫ ‚ùÑÔ∏è –≤ —Å–µ–±—è',
        )
        return

    if secret_box.is_secret_box:
        number_snowballs = secret_box.number_snowballs
        await message.answer(
            text=f'@{message.from_user.username} –±—Ä–æ—Å–∏–ª(–∞) –ø–æ–¥–∞—Ä–æ–∫ üéÅ –≤ @{message.reply_to_message.from_user.username},'
                 f' –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–∫–∞–∑–∞–ª–æ—Å—å {number_snowballs} {get_snow_word(number_snowballs)} ‚ùÑÔ∏è'
        )
    else:
        await message.answer(
            text=f'@{message.from_user.username} –±—Ä–æ—Å–∏–ª(–∞) —Å–Ω–µ–∂–æ–∫ ‚ùÑÔ∏è –≤ @{message.reply_to_message.from_user.username}'
        )
    await db_redis.snow_plus_one(message.from_user.id, message.reply_to_message.from_user.id)


def get_snow_word(count: int) -> str:
    if count % 10 == 1 and count % 100 != 11:
        return "—Å–Ω–µ–∂–æ–∫"
    elif 2 <= count % 10 <= 4 and not (12 <= count % 100 <= 14):
        return "—Å–Ω–µ–∂–∫–∞"
    else:
        return "—Å–Ω–µ–∂–∫–æ–≤"
